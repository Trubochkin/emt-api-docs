(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{180:function(e,t,r){"use strict";r.r(t);var n=r(0),i=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("div",{staticClass:"content"},[r("h1",{attrs:{id:"архитектура-приnожения"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#архитектура-приnожения","aria-hidden":"true"}},[e._v("#")]),e._v(" Архитектура приложения")]),e._v(" "),r("p",[r("img",{attrs:{src:"/images/architecture.png",alt:"app architecture"}})]),e._v(" "),r("p",[e._v("Веб сервер приложения построен на базе "),r("code",[e._v("Windows Server 2012 R2")]),e._v(". В качестве базы данных используется Microsoft SQL Server.\nСерверное приложение разрабатывается на платформе ASP.NET. Архитектура всего приложения состоит из нескольких компонентов:")]),e._v(" "),r("p",[r("strong",[r("code",[e._v("EMT.Web.UI (Frontend)")])]),e._v(" - компонент отвечающий за frontend часть и графический интерфейс. Компонент представляет собой одностраничное веб-приложение (SPA) на основе библиотеки VueJS. Приложение общается с сервером посредством HTTP запросов, которые позволяют принимать или отправлять данные закодированные в JSON формате. Также между сервером и клиентом (после авторизации) устанавливается соединение реального времени (на основе Web Socket и SignalR), которое позволяет серверу уведомлять клиента о новых данных, таких как новые значения счётчиков, новые оповещения об ошибках и т.д.")]),e._v(" "),r("p",[r("strong",[r("code",[e._v("EMT.Web.UI (Server Side)")])]),e._v(" - компонент отвечает за функцию соединения в реальном времени (на основе Web-Sockets и SignalR) с целью трансляции сообщений (server->client) о получении новых значений счетчиков (датчиков), новых оповещений об ошибках и т.д. Стоит отметить, что по данному каналу не передаются сами значения счётчика, а передаются id счётчика и временная метка, которые сообщают клиенту о том, что появились новые данные по определённому счётчику. После того как клиент узнает о доступности новых данных, он может запросить эти данные с помощью HTTP запроса, отправив id счётчика и временную метку.")]),e._v(" "),r("p",[e._v("RESTful API разделен на два независимых компонента: "),r("code",[e._v("EMT.Web.Api")]),e._v(" и "),r("code",[e._v("EMT.Web.Api.Receive")]),e._v(". Причиной такого решения является обеспечение отказоустойчивости системы, то есть в случае сбоя одного из компонентов другой может продолжить работу.")]),e._v(" "),r("p",[r("strong",[r("code",[e._v("EMT.Web.Api")])]),e._v(" - предоставляет набор сервисов RESTful с целью получения счетчиков, их значений, метаданных, получение и отправка данных состояния приложения и т.д.")]),e._v(" "),r("p",[r("strong",[r("code",[e._v("EMT.Web.Api.Receive")])]),e._v(" - предоставляет услуги RESTful, отвечающие за получение новых значений счетчиков от контроллеров производственных линий и сохранение полученных значений в базе данных.")])])}],!1,null,null,null);i.options.__file="architecture.md";t.default=i.exports}}]);